[include mainsail.cfg]
[include macros.cfg]
# [include KAMP/Line_Purge.cfg]

[virtual_sdcard]
path: /home/john/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[mcu]
serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0-port0
restart_method: command

# This file contains common configurations and pin mappings
# for the Flsun QQ-S using the MKS Robin Mini board.

# To use this config, the firmware should be compiled for the
# STM32F103. When running "make menuconfig", enable "extra low-level
# configuration setup", select the 28KiB bootloader, and serial (on
# USART3 PB11/PB10) communication.

# Note that the "make flash" command does not work with MKS Robin
# boards. After running "make", run the following command:
# ./scripts/update_mks_robin.py out/klipper.bin out/Robin_mini.bin
# Copy the file out/Robin_mini.bin to an SD card and then restart the
# printer with that SD card.

# For more detailed instructions on how to set Klipper up for this printer,
# follow this guide: https://github.com/CobraPi/Klipper-Firmware-FLSUN-QQ-S-Pro

# See docs/Config_Reference.md for a description of parameters.

[stepper_a]
step_pin: PE3
dir_pin: !PE2
enable_pin: !PE4
microsteps: 16
rotation_distance: 32
endstop_pin: PA15
homing_speed: 60
homing_retract_dist: 5
homing_retract_speed: 10
second_homing_speed: 2
# The next parameter needs to be adjusted for
# your printer. You may want to start with 280
# and measure the distance from nozzle to bed.
# This value then needs to be added.
#position_endstop: 372.00
#arm_length: 280.0
#angle: 210

[stepper_b]
step_pin: PE0
dir_pin: !PB9
enable_pin: !PE1
microsteps: 16
rotation_distance: 32
endstop_pin: PA12
#angle: 330

[stepper_c]
step_pin: PB5
dir_pin: !PB4
enable_pin: !PB8
microsteps: 16
rotation_distance: 32
endstop_pin: PC4
#angle: 90

[endstop_phase]

[extruder]
step_pin: PD6
dir_pin: PD3
enable_pin: !PB3
rotation_distance: 17.7803
gear_ratio: 80:20
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC3
sensor_type: ATC Semitec 104NT-4-R025H42G # EPCOS 100K B57560G104F
sensor_pin: PC1
#control: pid
#pid_Kp: 14.669
#pid_Ki: 0.572
#pid_Kd: 94.068
min_extrude_temp: 150
min_temp: 0
max_temp: 270
max_extrude_only_distance: 110.0
max_extrude_cross_section: 3
pressure_advance: 0.1912

[tmc2209 stepper_a]
uart_pin: PA8
uart_address: 1
run_current: .850
interpolate: true
stealthchop_threshold: 0

[tmc2209 stepper_b]
uart_pin: PA8
uart_address: 2
run_current: .850
interpolate: true
stealthchop_threshold: 0

[tmc2209 stepper_c]
uart_pin: PA8
uart_address: 3
run_current: .850
interpolate: true
stealthchop_threshold: 0

[tmc2209 extruder]
uart_pin: PA8
uart_address: 0
interpolate: true
run_current: .850
stealthchop_threshold: 0

[heater_bed]
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
#control: pid
#pid_Kp: 325.10
#pid_Ki: 63.35
#pid_Kd: 417.10
min_temp: 0
max_temp: 110

[fan]
pin: PB1
kick_start_time: 0.200

[filament_switch_sensor Filament]
pause_on_runout: True
switch_pin: PA4

[probe]
pin: !PA11
x_offset: 0
y_offset: 0
#z_offset: 20.26
speed: 10.0
samples: 5
samples_result: average
sample_retract_dist: 3
samples_tolerance: 0.02
samples_tolerance_retries: 5

[printer]
kinematics: delta
max_velocity: 500
max_accel: 2000
max_accel_to_decel: 2000
max_z_velocity: 200
#delta_radius: 140.8
minimum_z_position: -25

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[delta_calibrate]
radius: 120
horizontal_move_z: 25
speed: 10
#manual_probe: True
#   If true, then DELTA_CALIBRATE will perform manual probing. If
#   false, then a PROBE command will be run at each probe
#   point. Manual probing is accomplished by manually jogging the Z
#   position of the print head at each probe point and then issuing a
#   NEXT extended g-code command to record the position at that
#   point. The default is false if a [probe] config section is present
#   and true otherwise.

# Heater and temperature sensor verification. Heater verification is
# automatically enabled for each heater that is configured on the
# printer. Use verify_heater sections to change the default settings.
[verify_heater extruder]
heating_gain: 10
#   The minimum temperature (in Celsius) that the heater must increase
#   by when approaching a new target temperature. The default is 2.
check_gain_time: 999999
#   The amount of time (in seconds) that the heating_gain must be met
#   in before an error is raised. The default is 20 seconds for
#   extruders and 60 seconds for heater_bed.
hysteresis: 10
#   The difference between the target temperature and the current
#   temperature for the heater to be considered within range of the
#   target temperature. The default is 5.
max_error: 120
#   The maximum temperature difference a heater that falls outside the
#   target temperature range may accumulate before an error is
#   raised. For example, if the target temperature is 200, the
#   hysteresis is 5, the max_error is 120, and the temperature is
#   reported at 185 degrees for 12 seconds then an error would be
#   raised (or 24 seconds at 190, or 120 seconds at 194, etc.). The
#   default is 120.

[bed_mesh]
speed: 120
horizontal_move_z: 25
mesh_radius: 100
mesh_origin: 0, 0
round_probe_count: 5

[display_status]

[pause_resume]

[static_digital_output display_reset]
pins: !PC6, !PD13

[firmware_retraction]
retract_length: 3
retract_speed: 60
unretract_speed: 40

[gcode_arcs]

[exclude_object]

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC5,  EXP1_3=PD13, EXP1_5=PE14, EXP1_7=PD11, EXP1_9=<GND>,
    EXP1_2=PE13, EXP1_4=PC6,  EXP1_6=PE15, EXP1_8=PD10, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PA6, EXP2_3=PE8, EXP2_5=PE11, EXP2_7=PE12,  EXP2_9=<GND>,
    EXP2_2=PA5, EXP2_4=PE10, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<3.3v>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp1"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 21.478
#*#
#*# [printer]
#*# delta_radius = 140.968010
#*#
#*# [stepper_a]
#*# angle = 209.913748
#*# arm_length = 280.087887
#*# position_endstop = 375.043515
#*#
#*# [stepper_b]
#*# angle = 330.259776
#*# arm_length = 281.528022
#*# position_endstop = 374.010599
#*#
#*# [stepper_c]
#*# angle = 90.000000
#*# arm_length = 278.888463
#*# position_endstop = 374.962629
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 72.910
#*# pid_ki = 2.025
#*# pid_kd = 656.192
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.760
#*# pid_ki = 1.684
#*# pid_kd = 90.994
#*#
#*# [endstop_phase stepper_a]
#*# trigger_phase = 20/64
#*#
#*# [endstop_phase stepper_b]
#*# trigger_phase = 61/64
#*#
#*# [endstop_phase stepper_c]
#*# trigger_phase = 48/64
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.138132, -0.138132, -0.138132, -0.138132, -0.138132
#*# 	  0.035186, 0.035186, 0.054676, 0.106418, 0.106418
#*# 	  -0.069659, 0.054777, 0.051587, 0.060444, 0.075824
#*# 	  0.080193, 0.080193, 0.114204, -0.049646, -0.049646
#*# 	  0.059857, 0.059857, 0.059857, 0.059857, 0.059857
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = -100.0
#*# max_x = 100.0
#*# min_y = -100.0
#*# max_y = 100.0
#*#
#*# [delta_calibrate]
#*# height0 = 21.478
#*# height0_pos = 35349.600,35252.600,35348.200
#*# height1 = 21.478
#*# height1_pos = 42354.800,42153.800,31648.200
#*# height2 = 21.478
#*# height2_pos = 34628.800,46482.200,34629.200
#*# height3 = 21.478
#*# height3_pos = 31813.400,41051.800,41204.800
#*# height4 = 21.478
#*# height4_pos = 34399.000,34327.000,42938.000
#*# height5 = 21.478
#*# height5_pos = 40106.800,31925.400,40132.800
#*# height6 = 21.478
#*# height6_pos = 44628.000,34368.000,34479.600
